1. Accept the data from user and render on the same page with Javascript + Testing (DDD/TDD/BDD)
2. Accept the data from user and render on the same page with Javascript + with class 
3. Inheritance - Prototypal 
4. Cookies, Local Storage, Session Storage (set/get)



Jasmine 
-------------------------------------------
describe("A suite is just a function", function() {
  var a;

  it("and so is a spec", function() {
    a = true;

    expect(a).toBe(true);
  });
  describe("A suite is just a function", function() {
    var a;

    it("and so is a spec", function() {
      a = true;

      expect(a).toBe(true);
    });
  });
});
    

jest 
-----------------------------------------
describe('describe inner 1', () => {
    console.log('describe inner 1');
    test('test 1', () => {
      console.log('test for describe inner 1');
      expect(true).toEqual(true);
    });
  });

mocha 
------------------------------------------

 describe("RGB to Hex conversion", function() {
    it("converts the basic colors", function() {
	// foo.should.be.a('string');
	// expect(foo).to.be.a('string');
	// assert.typeOf(foo, 'string');

    });
  });


E2E - Selenium , saucelab, browserstack, ranorex 
protractor 
----------------------------------------------- 

describe('angularjs homepage todo list', function() {
  it('should add a todo', function() {
    browser.get('https://angularjs.org');
  } 
} 


Puppeteer 































References: (Improve Persormance of Front End Application )
https://www.keycdn.com/blog/frontend-optimization 


Jest Reference 
https://jestjs.io/docs/en/using-matchers#and-more
